/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;
import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;

public class App {

    public static void main(String[] args) throws IOException {
        try {
            cacheQuoteToFile();
        } catch (IOException e){
            readQuoteFromFile();
        }
    }


    // === PUT QUOTE FROM API IN JSON FILE AND PRINT OUT ===
    public static void cacheQuoteToFile() throws IOException {
        // access key value pairs from constructor in class Quote to format what we get from API
        Quote numbersQuote = new Quote("", new App().getNumbersAPI());

        Quote starWarsQuote = new Quote(new App().getStarWarsAPI());

        // print out the quote to the console (quote also stored to json file)
        System.out.println(numbersQuote);
        System.out.println(starWarsQuote.starWarsString());

        /////////////////////

        // Use the file writer to access the json file and use gson
        Reader fileReader = new FileReader(new File("src/main/resources/recentquotes.json"));
        Gson gson = new Gson();

        // make a quote array
        Quote[] origQuotesArr = gson.fromJson(fileReader, Quote[].class);

        // make a new array that is longer by 1
        Quote[] newQuotesArr = new Quote[origQuotesArr.length + 1];


        // add all the quotes into the new array
        for(int i = 0; i < origQuotesArr.length; i++){
            newQuotesArr[i] = origQuotesArr[i];
        }

        // tack on a new quote to the end of the new array
        newQuotesArr[newQuotesArr.length-1] = numbersQuote;

        // replace stuff in json file with new array stuff
        FileWriter quoteWriter = new FileWriter("src/main/resources/recentquotes.json");
        gson.toJson(newQuotesArr, quoteWriter);

        // close the quoteWriter
        quoteWriter.close();
    }


    // === GET A QUOTE DIRECTLY FROM JSON FILE TO PRINT WHEN INTERNET DOWN ===
    public static void readQuoteFromFile() throws FileNotFoundException {
        // === Put quotes from JSON into Array ===
        // read all quotes from file into superCoolQuotesArray variable

        Gson gson = new Gson();
        Quote[] superCoolQuotesArray = gson.fromJson(
                new FileReader(new File("src/main/resources/recentquotes.json")),
                Quote[].class);

        System.out.println(getRandomQuote(superCoolQuotesArray));
    }


    // === ACCESS API TO GET A QUOTE ===
    // API comes from: http://numbersapi.com/#42
    // base code to read from an api from Michelle Ferreirae - very standard code

    public String getNumbersAPI() throws IOException {
        // go to API
        URL jqueryUrl = new URL("http://numbersapi.com/random/year");
        HttpURLConnection connection = (HttpURLConnection) jqueryUrl.openConnection();

        // access data
        BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
        StringBuilder data = new StringBuilder();
        String line = reader.readLine();

        while(line != null) {
            data.append(line);
            line = reader.readLine();
        }
        // provide data in a string format
        return data.toString();
    }

    public String getStarWarsAPI() throws IOException {
        URL jqueryURL = new URL("http://swquotesapi.digitaljedi.dk/api/SWQuote/RandomStarWarsQuote");
        HttpURLConnection connection = (HttpURLConnection) jqueryURL.openConnection();

        BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
        StringBuilder data = new StringBuilder();
        String line = reader.readLine();

        while(line != null) {
            data.append(line);
            line = reader.readLine();
        }
        return data.toString();
    }


    // === HELPER METHOD - Get random quote from array of quotes ===
    public static Quote getRandomQuote(Quote[] quotes) {
        int index = (int)(Math.random() * quotes.length);
        return quotes[index];
    }
}
